/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:optionsWindow:994355:
  appc.background(230);
} //_CODE_:optionsWindow:994355:

synchronized public void optionsClick(PApplet appc, GWinData data, MouseEvent mevent) { //_CODE_:optionsWindow:769170:
  println("optionsWindow - mouse event " + millis());
} //_CODE_:optionsWindow:769170:

public void restartSnow(GButton source, GEvent event) { //_CODE_:restart_button:577211:
  println("restart_button - GButton >> GEvent." + event + " @ " + millis());
  totalReset();
} //_CODE_:restart_button:577211:

public void changeSnowFall(GSlider source, GEvent event) { //_CODE_:slider1:536945:
  println("slider1 - GSlider >> GEvent." + event + " @ " + millis());
  SNOW_RATE = source.getValueI();
} //_CODE_:slider1:536945:

public void getMom(GCheckbox source, GEvent event) { //_CODE_:treeCrazy:327039:
  println("treeCrazy - GCheckbox >> GEvent." + event + " @ " + millis());
  GET_MOM_MODE = source.isSelected();
} //_CODE_:treeCrazy:327039:

public void changeTreeNum(GSlider source, GEvent event) { //_CODE_:slider2:636173:
  println("slider2 - GSlider >> GEvent." + event + " @ " + millis());
  NUM_TREES = source.getValueI(); 
} //_CODE_:slider2:636173:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  optionsWindow = GWindow.getWindow(this, "Options", 0, 0, 400, 240, JAVA2D);
  optionsWindow.noLoop();
  optionsWindow.addDrawHandler(this, "win_draw1");
  optionsWindow.addMouseHandler(this, "optionsClick");
  restart_button = new GButton(optionsWindow, 301, 189, 80, 30);
  restart_button.setText("Reset Trails");
  restart_button.addEventHandler(this, "restartSnow");
  title = new GLabel(optionsWindow, 0, 0, 401, 20);
  title.setText("OPTIONS:");
  title.setTextBold();
  title.setTextItalic();
  title.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  title.setOpaque(true);
  label1 = new GLabel(optionsWindow, 261, 50, 10, 168);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setLocalColorScheme(GCScheme.ORANGE_SCHEME);
  label1.setOpaque(true);
  slider1 = new GSlider(optionsWindow, 115, 56, 138, 40, 10.0);
  slider1.setShowValue(true);
  slider1.setLimits(200, 0, 1000);
  slider1.setNumberFormat(G4P.INTEGER, 0);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "changeSnowFall");
  label2 = new GLabel(optionsWindow, 16, 57, 96, 40);
  label2.setText("Blizzard Rate:");
  label2.setTextBold();
  label2.setOpaque(false);
  treeCrazy = new GCheckbox(optionsWindow, 52, 163, 199, 20);
  treeCrazy.setIconPos(GAlign.EAST);
  treeCrazy.setText("\"Somebody get Mom\" Mode");
  treeCrazy.setOpaque(false);
  treeCrazy.addEventHandler(this, "getMom");
  label3 = new GLabel(optionsWindow, 109, 185, 139, 29);
  label3.setTextAlign(GAlign.RIGHT, GAlign.TOP);
  label3.setText("(Adds trees to the main path too)");
  label3.setTextItalic();
  label3.setOpaque(false);
  slider2 = new GSlider(optionsWindow, 115, 115, 138, 40, 10.0);
  slider2.setShowValue(true);
  slider2.setLimits(50, 0, 200);
  slider2.setNumberFormat(G4P.INTEGER, 0);
  slider2.setOpaque(false);
  slider2.addEventHandler(this, "changeTreeNum");
  label4 = new GLabel(optionsWindow, 16, 123, 89, 20);
  label4.setText("# of Trees: ");
  label4.setTextBold();
  label4.setOpaque(false);
  label5 = new GLabel(optionsWindow, 282, 139, 100, 49);
  label5.setText("RESET TRAILS (PERMANENT)");
  label5.setTextBold();
  label5.setTextItalic();
  label5.setOpaque(false);
  label6 = new GLabel(optionsWindow, 293, 70, 89, 65);
  label6.setText("Click to start downhill. Move mouse left or right to turn. ");
  label6.setTextItalic();
  label6.setOpaque(false);
  label7 = new GLabel(optionsWindow, 280, 49, 80, 20);
  label7.setText("CONTROLS");
  label7.setTextBold();
  label7.setOpaque(false);
  optionsWindow.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow optionsWindow;
GButton restart_button; 
GLabel title; 
GLabel label1; 
GSlider slider1; 
GLabel label2; 
GCheckbox treeCrazy; 
GLabel label3; 
GSlider slider2; 
GLabel label4; 
GLabel label5; 
GLabel label6; 
GLabel label7; 